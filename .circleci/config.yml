version: 2

references:
  base: &base
    macos:
      xcode: "9.4.0"
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      XCODE_PATH: /Applications/Xcode-9.4.app
      FASTLANE_SKIP_UPDATE_CHECK: 1

  steps:
    restore_cache: &restore_cache
      restore_cache:
        key: 1-charthage-{{ checksum "Cartfile.resolved" }}
    save_cache: &save_cache
      save_cache:
        key: 1-charthage-{{ checksum "Cartfile.resolved" }}
        paths:
          - Carthage
    store_build_artifacts: &store_build_artifacts
      store_artifacts:
        path: build
        destination: build
    store_gym_logs: &store_gym_logs
      store_artifacts:
        path: ~/Library/Logs/gym
        destination: logs/gym
    store_scan_logs: &store_scan_logs
      store_artifacts:
        path: ~/Library/Logs/scan
        destination: logs/scan
    store_snapshot_logs: &store_snapshot_logs
      store_artifacts:
        path: ~/Library/Logs/snapshot
        destination: logs/snapshot
    store_screenshots: &store_screenshots
      store_artifacts:
        path: fastlane/screenshots
        destination: screenshots
    install_fastlane: &install_fastlane
      run: sudo gem install fastlane
    attach_build_workspace: &attach_build_workspace
      attach_workspace:
        at: build

jobs:
  swiftlint:
    docker:
      - image: dantoml/swiftlint:latest
    steps:
      - checkout
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml

  danger:
    docker:
      - image: dantoml/danger:latest
    steps:
      - checkout
      - run: danger

  tests:
    <<: *base
    steps:
      - checkout
      - <<: *restore_cache
      - run: .circleci/bootstrap-carthage.sh
      - <<: *save_cache
      - <<: *install_fastlane
      - run: fastlane set_build_number
      - run: fastlane tests
      - <<: *store_scan_logs

  screenshots:
    <<: *base
    steps:
      - checkout
      - <<: *restore_cache
      - run: .circleci/bootstrap-carthage.sh
      - <<: *save_cache
      - <<: *install_fastlane
      - run: fastlane set_build_number
      - run: 'fastlane screenshots | egrep -v $UI_TEST_CIRCLE_TOKEN'
      - persist_to_workspace:
          root: fastlane
          paths:
            - screenshots
      - <<: *store_screenshots
      - <<: *store_snapshot_logs

  beta_build:
    <<: *base
    steps:
      - checkout
      - <<: *restore_cache
      - run: .circleci/bootstrap-carthage.sh
      - <<: *save_cache
      - <<: *install_fastlane
      - run: fastlane beta_match
      - run: fastlane set_build_number
      - run: fastlane beta_build
      - <<: *store_build_artifacts
      - <<: *store_gym_logs
      - persist_to_workspace:
          root: build
          paths:
            - adhoc

  beta_upload:
    <<: *base
    steps:
      - checkout
      - <<: *attach_build_workspace
      - <<: *install_fastlane
      - run: fastlane beta_match
      - run: fastlane beta_upload

  release_build:
    <<: *base
    steps:
      - checkout
      - <<: *restore_cache
      - run: .circleci/bootstrap-carthage.sh
      - <<: *save_cache
      - <<: *install_fastlane
      - run: fastlane release_match
      - run: fastlane set_build_number
      - run: fastlane release_build
      - <<: *store_build_artifacts
      - <<: *store_gym_logs
      - persist_to_workspace:
          root: build
          paths:
            - release

  release_upload:
    <<: *base
    steps:
      - checkout
      - <<: *attach_build_workspace
      - <<: *install_fastlane
      - run: fastlane release_match
      - run: fastlane release_upload

  release_metadata:
    <<: *base
    steps:
      - checkout
      - <<: *install_fastlane
      - run: fastlane release_metadata

  release_screenshots:
    <<: *base
    steps:
      - checkout
      - <<: *install_fastlane
      - run: fastlane release_screenshots

workflows:
  version: 2
  app:
    jobs:
      - swiftlint:
          filters:
            branches:
              ignore: [screenshots, metadata]

      - danger:
          filters:
            branches:
              ignore: [screenshots, metadata]

      - tests:
          requires:
            - swiftlint
            - danger
          filters:
            branches:
              ignore: [screenshots, metadata]

      - screenshots:
          filters:
            branches:
              only: new-screenshots

      - beta_build:
          requires:
            - tests
          filters:
            branches:
              only: [develop]

      - beta_upload:
          requires:
            - beta_build

      - release_build:
          requires:
            - tests
          filters:
            branches:
              only: [master]

      - release_upload:
          requires:
            - release_build
          filters:
            branches:
              ignore: metadata

      - release_metadata:
          filters:
            branches:
              only: [master, metadata]

      - release_screenshots:
          filters:
            branches:
              only: screenshots
