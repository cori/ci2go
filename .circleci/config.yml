version: 2.1

orbs:
  swiftlint: ngs/swiftlint@0.0.1
  danger: ngs/danger@0.0.1
  xcode:
    orbs:
      carthage: ngs/carthage@0.0.1
      # fastlane: ngs/fastlane@dev:local

    executors:
      macos:
        macos:
          xcode: "10.1.0"
        environment:
          XCODE_PATH: /Applications/Xcode.app
          FASTLANE_SKIP_UPDATE_CHECK: 1

    jobs:
      build:
        executor: macos
        parameters:
          target:
            default: ''
            description: 'Target to build: `release`, `beta`'
            type: string
        steps:
          - setup
          - fastlane:
              lane: << parameters.target >>_match
          - fastlane:
              lane: set_build_number
          - fastlane:
              lane: << parameters.target >>_build
          - store_artifacts:
              path: build
              destination: build
          - store_artifacts:
              path: ~/Library/Logs/gym
              destination: logs/gym
          - persist_to_workspace:
              root: build
              paths: [<< parameters.target >>]

      upload:
        executor: macos
        parameters:
          target:
            default: ''
            description: 'Target to build: `release`, `beta`'
            type: string
        steps:
          - checkout
          - attach_workspace:
              at: build
          - bundle_install
          - fastlane:
              lane: << parameters.target >>_match
          - fastlane:
              lane: << parameters.target >>_upload

      fastlane:
        executor: macos
        parameters:
          lane:
            default: ''
            description: 'lane to run'
            type: string
        steps:
          - checkout
          - bundle_install
          - fastlane:
              lane: << parameters.lane >>

      tests:
        executor: macos
        steps:
          - setup
          - fastlane:
              lane: tests
          #- fastlane:
          #   lane: send_coveralls
          - store_test_results:
              path: fastlane/test_output
          - store_artifacts:
              path: fastlane/test_output
              destination: test_output
          - store_artifacts:
              path: ~/Library/Logs/scan
              destination: logs/scan

      screenshots:
        executor: macos
        steps:
          - setup
          - run: 'bundle exec fastlane screenshots | egrep -v $UI_TEST_CIRCLE_TOKEN'
          - persist_to_workspace:
              root: fastlane
              paths:
                - screenshots
          - store_artifacts:
              path: fastlane/screenshots
              destination: screenshots
          - store_artifacts:
              path: ~/Library/Logs/snapshot
              destination: logs/snapshot

    commands:
      bundle_install:
        steps:
          - restore_cache:
              key: 1-bundler-{{ checksum "Gemfile.lock" }}
          - run:
              name: 'Bundle install'
              command: bundle install --path Vendor/bundler
          - save_cache:
              key: 1-bundler-{{ checksum "Gemfile.lock" }}
              paths:
                - Vendor/bundler

      setup:
        steps:
          - checkout
          - carthage/setup:
              platforms: iOS,watchOS
              cache_key_prefix: 2-carthage-
              watch_os: '5.0'
          - bundle_install

      fastlane:
        parameters:
          lane:
            default: ''
            description: 'lane to run'
            type: string
        steps:
          - run:
              name: 'fastlane << parameters.lane >>'
              command: 'bundle exec fastlane << parameters.lane >>'

workflows:
  version: 2
  app:
    jobs:
      - swiftlint/run:
          name: swiftlint
          filters:
            branches:
              ignore: [screenshots, metadata]

      - danger/run:
          name: danger
          filters:
            branches:
              ignore: [screenshots, metadata]

      - xcode/tests:
          name: tests
          requires:
            - swiftlint
            - danger
          filters:
            branches:
              ignore: [screenshots, metadata]

      - xcode/screenshots:
          filters:
            branches:
              only: new-screenshots

      - xcode/build:
          name: beta_build
          target: beta
          requires: [tests]
          filters:
            branches:
              only: [develop]

      - xcode/upload:
          name: beta_upload
          target: beta
          requires: [beta_build]
          filters:
            branches:
              only: [develop]

      - xcode/build:
          name: release_build
          target: release
          requires: [tests]
          filters:
            branches:
              only: [master, /release-.+/]

      - xcode/upload:
          name: release_upload
          target: release
          requires:
            - release_build
          filters:
            branches:
              ignore: metadata

      - xcode/fastlane:
          name: release_metadata
          lane: release_metadata
          filters:
            branches:
              only: [master, metadata]

      - xcode/fastlane:
          name: release_screenshots
          lane: release_screenshots
          filters:
            branches:
              only: screenshots
